/* COMMON */
body {
  color: #333;
  font-size: 1rem;
  font-weight: 400;
  font-family: "Nanum Gothic", sans-serif;
  line-height: 1.4;

  height: 3000px;
}

img {
  /* img 태그는 인라인 요소이기 때문에 baseline 위에 나타나게 된다.
  따라서 display 속성을 block으로 설정해주어 baseline의 영향을 받지 않게 해준다. */
  display: block;
}

a {
  text-decoration: none;
}

/* 전체 페이지에서 공통적으로 어떠한 영역을 사용하기 위해 내부 박스의 구조를 지정해놓는다. */
.inner {
  position: relative;
  width: 1100px;
  margin: 0 auto;
}

.btn {
  /* 인라인 요소에 btn 클래스를 추가해도 정상적으로 스타일을 지정하기 위해 블록으로 설정한다. */
  display: block;
  text-align: center;
  width: 130px;
  padding: 10px;
  border: 2px solid #333;
  border-radius: 4px;
  font-size: 16px;
  font-weight: 700;
  color: #333;
  cursor: pointer;
  box-sizing: border-box;
  transition: 0.4s;
}

.btn:hover {
  color: #fff;
  background-color: #333;
}

/* BEM을 이용해서 버튼의 상태에 따라 색상을 지정해준다. */
/* 선택자 우선순위에 의해 위에서 지정한 스타일을 덮어씌울 수 있다. */
.btn.btn--reverse {
  color: #fff;
  background-color: #333;
}

.btn.btn--reverse:hover {
  color: #333;
  background-color: transparent;
}

.btn.btn--brown {
  color: #592b18;
  border-color: #592b18;
}

.btn.btn--brown:hover {
  color: #fff;
  background-color: #592b18;
}

.btn.btn--gold {
  color: #d9aa8a;
  border-color: #d9aa8a;
}

.btn.btn--gold:hover {
  color: #fff;
  background-color: #d9aa8a;
}

.btn.btn--white {
  color: #fff;
  border-color: #fff;
}

.btn.btn--white:hover {
  color: #333;
  background-color: #fff;
}

/* HEADER */
header {
  /* position 속성을 absolute 또는 fixed로 설정하면 블록 요소의 너비가
  최대한 작게 설정된다. */
  position: fixed;
  top: 0;
  width: 100%;
  border-bottom: 1px solid #c8c8c8;
  background-color: #f6f5f0;
  z-index: 9;
}

/* > 자식 선택자를 사용해서 전체 .inner에 영향을 미치지않게 해준다. */
header > .inner {
  height: 120px;
}

header .logo {
  /* position 속성을 이용해서 요소를 가운데 정렬하는 방법
  position 속성의 값을 absolute로 설정하고, top, bottom(left, right)을 0으로 설정한다.
  그리고 해당 축의 방향으로 margin 속성을 auto로 설정하면 가운데 정렬이 된다.
  이때 꼭 height(width) 값을 명시해주어야 한다.*/
  position: absolute;
  top: 0;
  bottom: 0;
  height: 75px;
  margin: auto 0;
}

header .sub-menu {
  position: absolute;
  top: 10px;
  right: 0;
  display: flex;
}

header .sub-menu ul.menu {
  display: flex;
  font-family: Arial, sans-serif;
}

header .sub-menu ul.menu li {
  position: relative;
}

header .sub-menu ul.menu li::before {
  content: "";
  position: absolute;
  top: 0;
  bottom: 0;
  /* 가상 요소는 인라인 요소이므로 가로, 세로를 지정할 수 없으므로 블록 요소로 설정해준다. */
  /* 하지만 position 속성을 absolute 또는 fixed로 설정하면 자동으로 display 속성이 block으로 변경되므로 생략해줘도 된다. */
  /* display: block; */
  width: 1px;
  height: 12px;
  margin: auto 0;
  background-color: #e5e5e5;
}

header .sub-menu ul.menu li:first-child::before {
  display: none;
}

header .sub-menu ul.menu li a {
  display: block;
  padding: 11px 16px;
  font-size: 12px;
  color: #656565;
}

header .sub-menu ul.menu li a:hover {
  color: #000;
}

header .sub-menu .search {
  position: relative;
  height: 34px;
}

header .sub-menu .search input {
  width: 36px;
  height: 34px;
  padding: 4px 10px;
  border: 1px solid #ccc;
  border-radius: 5px;
  outline: none;
  color: #777;
  font-size: 12px;
  background-color: #fff;
  box-sizing: border-box;
  transition: width 0.4s;
}

header .sub-menu .search input:focus {
  width: 190px;
  border-color: #669900;
}

header .sub-menu .search .material-icons {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 5px;
  height: 24px;
  margin: auto 0;
  transition: 0.4s;
}

header .sub-menu .search.focused .material-icons {
  pointer-events: none;
  opacity: 0;
}

header .main-menu {
  position: absolute;
  bottom: 0;
  right: 0;
  display: flex;
  /* 메뉴에 hover했을 때 나타나는 요소가 다른 요소에 의해 가리지 않게 해준다. */
  z-index: 1;
}

header .main-menu .item .item__name {
  padding: 10px 20px 34px 20px;
  font-family: Arial, sans-serif;
  font-size: 13px;
}

/* item의 자식 요소인 item__name과 item__contents 요소 중 하나라도 hover되면
다음의 CSS를 적용시키기 위해 .item:hover .item__name로 선택자를 지정하였다. */
header .main-menu .item:hover .item__name {
  border-radius: 6px 6px 0 0;
  color: #669900;
  background-color: #2c2a29;
}

header .main-menu .item .item__contents {
  /* position 속성을 fixed로 설정해서 뷰포트를 기준으로 위치를 지정한다. */
  position: fixed;
  /* position 속성을 fixed로 설정했을 때, top이나 bottom 속성을 사용하지 않아 수직 위치 값이 없다면,
  요소의 원래 위치를 그대로 사용한다.
  따라서 left 속성을 0으로 설정해서 요소가 뷰포트의 왼쪽부터 나타날 수 있게 해준다. */
  left: 0;
  display: none;
  /* width 속성을 100%로 설정해서 뷰포트를 가득 채우게 설정한다. */
  width: 100%;
}

header .main-menu .item:hover .item__contents {
  display: block;
}

header .main-menu .item .item__contents .contents__menu {
  background-color: #2c2a29;
}

header .main-menu .item .item__contents .contents__menu > ul {
  display: flex;
  padding: 20px 0;
}

header .main-menu .item .item__contents .contents__menu > ul > li {
  width: 220px;
}

header .main-menu .item .item__contents .contents__menu > ul > li h4 {
  padding: 3px 0 12px 0;
  font-size: 14px;
  color: #fff;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li {
  padding: 5px 0;
  font-size: 12px;
  color: #999;
  cursor: pointer;
}

header .main-menu .item .item__contents .contents__menu > ul > li ul li:hover {
  color: #669900;
}

header .main-menu .item .item__contents .contents__texture {
  padding: 26px 0;
  font-size: 12px;
  background-image: url("../images/main_menu_pattern.jpg");
}

header .main-menu .item .item__contents .contents__texture h4 {
  font-weight: 700;
  color: #999;
}

header .main-menu .item .item__contents .contents__texture p {
  margin: 4px 0 14px;
  color: #669900;
}

header .badges {
  position: absolute;
  top: 132px;
  right: 12px;
}

header .badges .badge {
  margin-bottom: 12px;
  border-radius: 10px;
  overflow: hidden;
  box-shadow: 4px 4px 10px rgba(0, 0, 0, 0.15);
  cursor: pointer;
}

/* VISUAL */
.visual {
  /* header와 겹치지 않게 위에 header의 높이 120px 만큼 여백을 준다. */
  margin-top: 120px;
  background-image: url("../images/visual_bg.jpg");
  background-position: center;
}

.visual .inner {
  height: 646px;
}

.visual .title {
  position: absolute;
  top: 88px;
  left: -10px;
}

.visual .title .btn {
  position: absolute;
  top: 259px;
  left: 173px;
}

.visual .cup1.image {
  position: absolute;
  bottom: 0;
  right: -47px;
}

.visual .cup1.text {
  position: absolute;
  top: 38px;
  right: 171px;
}

.visual .cup2.image {
  position: absolute;
  bottom: 0;
  right: 162px;
}

.visual .cup2.text {
  position: absolute;
  top: 321px;
  right: 416px;
}

.visual .spoon {
  position: absolute;
  bottom: 0;
  left: 275px;
}

.visual .fade-in {
  opacity: 0;
}

/* NOTICE */
.notice .notice-line {
  position: relative;
}

.notice .notice-line .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #333;
}

.notice .notice-line .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #f6f5ef;
}

.notice .notice-line .inner {
  display: flex;
  /* notice-line은 height 속성을 지정하지 않아 높이가 최대한 줄어들려고 한다.
  그렇기 때문에 inner 요소의 height를 62px로 지정하고 bg-left, bg-right의 height를 100%로 지정하면
  inner 요소의 height인 62px에 맞춰지는 것이다. */
  height: 62px;
}

.notice .notice-line .inner__left {
  /* 부모 요소의 display 속성을 flex로 설정하고
  자식 요소에 height 속성을 따로 지정해주지 않으면 최대한 늘어난다.
  이것은 부모 요소의 align-items 속성의 기본값이 stretch이기 때문이다. */
  display: flex;
  align-items: center;
  width: 60%;
  height: 100%;
  background-color: #333;
}

.notice .notice-line .inner__left h2 {
  margin-right: 20px;
  font-size: 17px;
  font-weight: 700;
  color: #fff;
}

.notice .notice-line .inner__left .swiper {
  flex-grow: 1;
  height: 62px;
}

.notice .notice-line .inner__left .swiper .swiper-wrapper .swiper-slide {
  display: flex;
  align-items: center;
  height: 62px;
}

.notice .notice-line .inner__left .swiper .swiper-wrapper .swiper-slide a {
  color: #fff;
}

.notice .notice-line .inner__left .notice-line__more {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 62px;
  height: 62px;
}

.notice .notice-line .inner__left .notice-line__more .material-icons {
  font-size: 30px;
  color: #fff;
}

.notice .notice-line .inner__right {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  width: 40%;
  height: 100%;
}

.notice .notice-line .inner__right h2 {
  font-size: 17px;
  font-weight: 700;
}

.notice .notice-line .inner__right .toggle-promotion {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 62px;
  height: 62px;
  cursor: pointer;
}

.notice .notice-line .inner__right .toggle-promotion .material-icons {
  font-size: 30px;
}

.notice .promotion {
  position: relative;
  height: 693px;
  background-color: #f6f5ef;
  overflow: hidden;
  transition: height 0.4s;
}

.notice .promotion.hide {
  height: 0;
}

.notice .promotion .swiper {
  position: absolute;
  top: 40px;
  /* 요소를 left: 50% 속성으로 왼쪽에서 요소 너비의 반 만큼 밀어낸 다음,
  margin-left 속성의 값을 -(요소 크기의 반) 만큼 설정해주어서 요소를 다시
  왼쪽으로 요소 너비의 반만큼 밀어 요소가 가운데에 위치하게 만들었다. */
  left: 50%;
  display: flex;
  justify-content: center;
  text-align: center;
  width: calc(819px * 3 + 20px);
  height: 553px;
  margin-left: calc((819px * 3 + 20px) / -2);
}

.notice .promotion .swiper .swiper-wrapper .swiper-slide {
  position: relative;
  opacity: 0.5;
  transition: opacity 1s;
}

.notice .promotion .swiper .swiper-wrapper .swiper-slide.swiper-slide-active {
  opacity: 1;
}

.notice .promotion .swiper .swiper-wrapper .swiper-slide .btn {
  position: absolute;
  bottom: 0;
  left: 0;
  right: 0;
  margin: 0 auto;
}

.notice .promotion .swiper-pagination {
  /* swiperjs에 의해 기본적으로 pagination이 position 속성을 가지고있어 바로 값을 입력한다. */
  bottom: 40px;
  left: 0;
  right: 0;
}

.notice .promotion .swiper-pagination .swiper-pagination-bullet {
  width: 12px;
  height: 12px;
  margin-right: 6px;
  background-color: transparent;
  background-image: url("../images/promotion_slide_pager.png");
  outline: none;
}

.notice .promotion .swiper-pagination .swiper-pagination-bullet:last-child {
  margin-right: 0;
}

.notice .promotion .swiper-pagination .swiper-pagination-bullet-active {
  background-image: url("../images/promotion_slide_pager_on.png");
}

.notice .promotion .swiper-button-prev,
.notice .promotion .swiper-button-next {
  position: absolute;
  top: 300px;
  width: 42px;
  height: 42px;
  border: 2px solid #333;
  border-radius: 50%;
  outline: none;
  color: #333;
  z-index: 1;
  cursor: pointer;
  transition: 0.4s;
}

.notice .promotion .swiper-button-prev {
  left: 50%;
  margin-left: -480px;
}

.notice .promotion .swiper-button-next {
  right: 50%;
  margin-right: -480px;
}

.notice .promotion .swiper-button-prev:hover,
.notice .promotion .swiper-button-next:hover {
  color: #fff;
  background-color: #333;
}

.notice .promotion .swiper-button-prev::after,
.notice .promotion .swiper-button-next::after {
  /* swiperjs에서 제공하는 버튼의 화살표를 제거한다. */
  display: none;
}

/* REWARDS */
.rewards {
  position: relative;
}

.rewards .bg-left {
  position: absolute;
  top: 0;
  left: 0;
  width: 50%;
  height: 100%;
  background-color: #272727;
}

.rewards .bg-right {
  position: absolute;
  top: 0;
  right: 0;
  width: 50%;
  height: 100%;
  background-color: #d5c798;
}

.rewards .inner {
  height: 241px;
  background-image: url("../images/rewards.jpg");
}

.rewards .btn-group {
  position: absolute;
  bottom: 24px;
  right: 0;
  display: flex;
  flex-wrap: wrap;
  width: 250px;
}

.rewards .btn-group .btn.sign-in {
  width: 110px;
}

.rewards .btn-group .btn.sign-up {
  margin-right: 10px;
}

.rewards .btn-group .btn.gift {
  flex-grow: 1;
  margin-top: 10px;
}

/* YOUTUBE VIDEO */
.youtube {
  position: relative;
  height: 700px;
  background-color: #333;
  overflow: hidden;
}

.youtube .youtube__area {
  position: absolute;
  left: 50%;
  top: 50%;
  width: 1920px;
  margin-left: calc(1920px / -2);
  margin-top: calc(1920px * 9 / 16 / -2);
  background-color: orange;
}

.youtube .youtube__area::before {
  content: "";
  display: block;
  width: 100%;
  height: 0;
  /* 요소의 높이를 부모요소의 width 값에 따라 일정한 비율로 유지되게 만들어 준다. */
  /* padding을 %로 설정하면 부모요소의 width 값을 기준으로 값을 정한다. */
  padding-top: 56.25%;
}

.youtube .youtube__cover {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-image: url("../images/video_cover_pattern.png");
  background-color: rgba(0, 0, 0, 0.3);
}

#player {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.youtube .inner {
  height: 700px;
}

.youtube .floating1 {
  position: absolute;
  top: 50px;
  left: 0;
}

.youtube .floating2 {
  position: absolute;
  top: 350px;
  left: 150px;
}

/* SEASON PRODUCT */
.season-product {
  background-image: url("../images/season_product_bg.jpg");
}

.season-product .inner {
  height: 400px;
}

.season-product .floating3 {
  position: absolute;
  top: -200px;
  right: 0;
}

.season-product .text-group {
  position: absolute;
  top: 110px;
  right: 100px;
}

.season-product .text-group .title {
  margin-bottom: 10px;
}

.season-product .text-group .description {
  margin-bottom: 15px;
}
